// src/commands/roles/reaction-role.ts
import { SlashCommandBuilder, ChatInputCommandInteraction } from 'discord.js';
import roleService from '../../services/roleService';
import logger from '../../utils/logger';

export default {
  data: new SlashCommandBuilder()
    .setName('reaction-role')
    .setDescription('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—ã–¥–∞—á–∏ —Ä–æ–ª–∏ –ø–æ —Ä–µ–∞–∫—Ü–∏–∏')
    .addStringOption(opt =>
      opt.setName('message_id')
        .setDescription('ID —Å–æ–æ–±—â–µ–Ω–∏—è, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –±—É–¥–µ—Ç —Ä–æ–ª—å')
        .setRequired(true)
    )
    .addStringOption(opt =>
      opt.setName('emoji')
        .setDescription('Emoji (—Å–∏–º–≤–æ–ª –∏–ª–∏ ID) –¥–ª—è —Ä–µ–∞–∫—Ü–∏–∏')
        .setRequired(true)
    )
    .addRoleOption(opt =>
      opt.setName('role')
        .setDescription('–†–æ–ª—å, –∫–æ—Ç–æ—Ä–∞—è –≤—ã–¥–∞–µ—Ç—Å—è')
        .setRequired(true)
    ),
  async execute(interaction: ChatInputCommandInteraction) {
    const messageId = interaction.options.getString('message_id', true);
    const emoji = interaction.options.getString('emoji', true);
    const role = interaction.options.getRole('role', true);

    try {
      await roleService.createReactionRole(messageId, emoji, role.id);
      await interaction.reply({
        content: `–ü—Ä–∏–≤—è–∑–∫–∞ —Ä–µ–∞–∫—Ü–∏–∏ ${emoji} –∫ —Ä–æ–ª–∏ ${role.name} –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–∏ ${messageId} —Å–æ–∑–¥–∞–Ω–∞. ü§ñ`,
        ephemeral: true,
      });
    } catch (error) {
      logger.error('Error in reaction-role command:', error);
      await interaction.reply({
        content: '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø—Ä–∏–≤—è–∑–∫—É —Ä–µ–∞–∫—Ü–∏–∏ –∫ —Ä–æ–ª–∏.',
        ephemeral: true,
      });
    }
  }
};
